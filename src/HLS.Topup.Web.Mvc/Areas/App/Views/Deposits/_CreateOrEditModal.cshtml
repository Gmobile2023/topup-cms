@using HLS.Topup.Common;

@using System.Globalization
@using HLS.Topup.Web.Areas.App.Models.Common.Modals
@using HLS.Topup.Web.Areas.App.Models.Deposits
@model CreateOrEditDepositModalViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditDeposit")) : L("CreateNewDeposit")))

<div class="modal-body">
    <div id="DepositInformationsTab">
        <form name="DepositInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
                <input type="hidden" name="id" value="@Model.Deposit.Id"/>
            }
            <input type="hidden" name="type" value="1"/>
            @*             <div class="form-group m-form__group"> *@
            @*                 <label for="UserName">Chọn tài khoản nạp tiền <span class="lightred">(*)</span></label> *@
            @*                 <div class="input-group"> *@
            @*                     <input class="form-control" id="UserName" name="userName" value="@Model.UserName" type="text" disabled> *@
            @*                     <div class="input-group-append"> *@
            @*                         <button class="btn btn-primary blue" id="OpenUserLookupTableButton" type="button"> *@
            @*                             <i class="fa fa-search"></i> @L("Pick") *@
            @*                         </button> *@
            @*                     </div> *@
            @*                     <div class="input-group-prepend"> *@
            @*                         <button class="btn btn-danger btn-icon" type="button" id="ClearUserNameButton"> *@
            @*                             <i class="fa fa-times"></i> *@
            @*                         </button> *@
            @*                     </div> *@
            @*                 </div> *@
            @*             </div> *@
            @*             @if (Model.IsEditMode) *@
            @*             { *@
            @*                 <input class="form-control" id="Deposit_UserId" value="@Model.Deposit.UserId" type="text" name="userId" required hidden/> *@
            @*             } *@
            @*             else *@
            @*             { *@
            @*                 <input class="form-control" id="Deposit_UserId" value="" type="text" name="userId" required hidden/> *@
            @*             } *@

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group m-form__group">
                        <label for="select_UserId">Chọn tài khoản nạp tiền <span class="lightred">(*)</span></label>
                        <div class="input-group">
                            <div class="input-group">
                                @if (Model.IsEditMode)
                                {
                                    <select id="select_UserId" name="userId" class="form-control select2" required style="width:800px" disabled>
                                        <option value="@Model.Deposit.UserId">@Model.UserName</option>
                                    </select>
                                }
                                else
                                {
                                    <select id="select_UserId" name="userId" class="form-control select2" required style="width:800px">
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <label for="SaleMan">Nhân viên kinh doanh</label>
                    <div class="form-group m-form__group">
                        <input class="form-control" id="SaleMan" name="saleMan" type="text" disabled>
                    </div>
                </div>
            </div>

            @{
                var selectListStatus = Html.GetEnumSelectList(typeof(CommonConst.DepositStatus));
                foreach (var selectOption in selectListStatus)
                {
                    selectOption.Text = L("Enum_DepositStatus_" + selectOption.Value);
                }
            }
            @* <div class="form-group m-form__group"> *@
            @*     <label for="Deposit_Status">@L("Status")</label> *@
            @*     <select class="form-control m-input m-input--square" name="status" id="Deposit_Status" asp-for="@Model.Deposit.Status" asp-items="@selectListStatus"> *@
            @*     </select> *@
            @* </div> *@

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="bankId">
                            @L("Bank") <span class="lightred">(*)</span>
                        </label>
                        @Html.DropDownList("bankId", new SelectList(Model.DepositBankList, "Id", "DisplayName", (Model.IsEditMode ? Model.Deposit.BankId.ToString() : "")), "Chọn ngân hàng", new {@class = "form-control", @required = "required"})
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="Deposit_Amount">
                            @L("Amount") <span class="lightred">(*)</span>
                        </label>
                        <input class="form-control m-input amount-mask" id="Deposit_Amount" value="@Model.Deposit.Amount" type="text" required="required" name="amount"/>
                        <br>
                        <div class="amount-to-text"></div>
                    </div>
                </div>
            </div>

            <div class="row">
                @* <div class="col-md-6"> *@
                @*     <div class="form-group"> *@
                @*         <label for="Deposit_TransCode">@L("TransCode")</label> *@
                @*         <input class="form-control" id="Deposit_TransCode" value="@Model.Deposit.TransCode" type="text" name="transCode" maxlength="@HLS.Topup.Deposits.DepositConsts.MaxTransCodeLength" minlength="@HLS.Topup.Deposits.DepositConsts.MinTransCodeLength"/> *@
                @*     </div> *@
                @* </div> *@
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="Deposit_Description">@L("Description")</label>
                        <textarea class="form-control" id="Deposit_Description" type="text" name="description" rows="3">@Model.Deposit.Description</textarea>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")